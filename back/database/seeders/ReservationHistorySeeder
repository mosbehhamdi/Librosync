<?php

namespace Database\Seeders;

use Illuminate\Database\Seeder;
use App\Models\Reservation;
use App\Models\Book;
use App\Models\User;
use Carbon\Carbon;

class ReservationHistorySeeder extends Seeder
{
    public function run()
    {
        $books = Book::all();
        $users = User::where('role', 'user')->get();

        foreach ($books as $book) {
            // Create multiple reservations with different status histories
            for ($i = 0; $i < rand(2, 5); $i++) {
                $baseDate = Carbon::now()->subDays(rand(1, 90));

                $reservation = Reservation::create([
                    'book_id' => $book->id,
                    'user_id' => $users->random()->id,
                    'status' => 'returned', // Final status
                    'created_at' => $baseDate,
                    'updated_at' => $baseDate->copy()->addDays(rand(5, 15)),
                    'status_history' => [
                        'created' => $baseDate->toDateTimeString(),
                        'ready' => $baseDate->copy()->addDays(1)->toDateTimeString(),
                        'accepted' => $baseDate->copy()->addDays(2)->toDateTimeString(),
                        'delivered' => $baseDate->copy()->addDays(3)->toDateTimeString(),
                        'returned' => $baseDate->copy()->addDays(10)->toDateTimeString()
                    ]
                ]);
            }

            // Add some cancelled reservations
            for ($i = 0; $i < rand(1, 3); $i++) {
                $baseDate = Carbon::now()->subDays(rand(1, 90));

                $reservation = Reservation::create([
                    'book_id' => $book->id,
                    'user_id' => $users->random()->id,
                    'status' => 'cancelled',
                    'created_at' => $baseDate,
                    'updated_at' => $baseDate->copy()->addDays(rand(1, 5)),
                    'status_history' => [
                        'created' => $baseDate->toDateTimeString(),
                        'cancelled' => $baseDate->copy()->addDays(rand(1, 5))->toDateTimeString()
                    ]
                ]);
            }
        }
    }
}
